name: Compile kernel msm8916

on:
  repository_dispatch:
  workflow_dispatch:

env:
  TZ: Asia/Jakarta
  HN: chewy

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install binfmt-support qemu-user-static gcc-10-aarch64-linux-gnu kernel-package fakeroot simg2img img2simg mkbootimg bison build-essential git flex gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu libssl-dev rsync debootstrap build-essential fakeroot bc kmod cpio flex cpio libncurses5-dev libelf-dev libssl-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo hostnamectl set-hostname "$HN"
        sudo mkdir -p /workdir/kernel
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth=1 https://github.com/msm8916-mainline/linux linux
        ln -sf /workdir/linux $GITHUB_WORKSPACE/linux

    - name: Compile kernel
      run: |
        cp $GITHUB_WORKSPACE/msm8916_defconfig linux/arch/arm64/configs/msm8916_defconfig
        cd linux
        sudo mkdir modules
        #sed -i "s/Handsome OpenStick UZ801/Chewy Mage UZ801 V3.2/g" arch/arm64/boot/dts/qcom/*uz801*.dts
        export CROSS_COMPILE=aarch64-linux-gnu-
        export ARCH=arm64
        export LOCALVERSION=
        make LOCALVERSION= mrproper
        make msm8916_defconfig
        make LOCALVERSION= Image modules dtbs -j$(nproc)
        sudo make LOCALVERSION= INSTALL_MOD_PATH=modules modules_install
        sudo mv /workdir/linux/arch/arm64/boot/Image /workdir/kernel
        sudo gzip /workdir/kernel/Image
        sudo mv /workdir/linux/arch/arm64/boot/dts/qcom/*uz801*.dtb /workdir/kernel
        (cd /workdir/linux/modules/lib/modules && sudo tar cfz /workdir/kernel/modules.tar.gz *)

    - name: Upload linux directory
      uses: actions/upload-artifact@main
      with:
        name: linux
        path: /workdir/kernel/*

